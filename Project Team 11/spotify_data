import spotipy
from spotipy.oauth2 import SpotifyClientCredentials

# Replace these values with your Spotify API credentials
CLIENT_ID = 'e102f5eed3f440cba83028f3dc4310b5'
CLIENT_SECRET = 'c0820898fb144ccbb0ef4b90914bd83f'

try:
    # Initialize Spotify API client without cache_path parameter
    sp = spotipy.Spotify(auth_manager=SpotifyClientCredentials(client_id=CLIENT_ID, client_secret=CLIENT_SECRET))

    # Search for classical music playlists and limit the results to 15 playlists
    query = 'classical'
    results = sp.search(q=query, type='playlist', limit=15)  # Limiting to 15 playlists related to classical music

    # Collect data from the classical music playlists
    classical_music_data = []
    for playlist in results['playlists']['items']:
        playlist_name = playlist['name']
        playlist_id = playlist['id']
        
        # Check if the playlist is related to classical music (you can adjust the logic based on your needs)
        if 'classical' in playlist_name.lower():
            # Get tracks from the playlist
            tracks = sp.playlist_tracks(playlist_id=playlist_id)
            
            for track in tracks['items']:
                track_name = track['track']['name']
                artist_name = track['track']['artists'][0]['name']
                classical_music_data.append({'playlist': playlist_name, 'track': track_name, 'artist': artist_name})

    # Print collected data
    for item in classical_music_data:
        print(f"Playlist: {item['playlist']}, Track: {item['track']}, Artist: {item['artist']}")

except Exception as e:
    print(f"An error occurred: {str(e)}")
